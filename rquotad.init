#!/bin/sh
#
# rquotad	This shell script takes care of starting and stopping
#		the NFS quota service.
#
# chkconfig:	345 12 21
# description:	NFS is a popular protocol for file sharing across \
#		TCP/IP networks. This service provides NFS file \
#		locking functionality.
# probe: true

# Source function library.
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Get service config
[ -f /etc/sysconfig/rquotad ] && . /etc/sysconfig/rquotad

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down "NFS rquotad"
		exit 1
	fi
else
	exit 0
fi

if [ -x /sbin/pidof ] && [ "$1" != "stop" ] && [ -z "`/sbin/pidof portmap`" ]; then
	echo "Error: portmap isn't running"
	exit 0
fi

start() {
	# Check if the service is already running?
	if [ ! -f /var/lock/subsys/rquotad ]; then
		# RQUOTADOPTIONS will be removed in the future
		OPTIONS="$RQUOTADOPTIONS"
		[ -n "$RQUOTAD_PORT" ] && OPTIONS="$OPTIONS -p $RQUOTAD_PORT"
		is_yes "$AUTOFS" && OPTIONS="$OPTIONS --autofs"
		if is_yes "$REMOTE_QUOTA_SETTING"; then
		    OPTIONS="$OPTIONS --setquota"
		else
		    OPTIONS="$OPTIONS --no-setquota"
		fi
		# Start daemons.
		msg_starting "NFS quotas"
		daemon rpc.rquotad $OPTIONS
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/rquotad
	else
		msg_already_running "NFS quota daemon"
	fi
}

stop() {
	if [ -f /var/lock/subsys/rquotad ]; then
		# Stop daemons.
		msg_stopping "NFS quotas"
		killproc rpc.rquotad
		rm -f /var/lock/subsys/rquotad
	else
		msg_not_running "NFS quota daemon"
	fi
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  status)
	status rpc.rquotad
	exit $?
	;;
  restart|force-reload)
	stop
	start
	;;
  probe)
	if [ ! -f /var/lock/subsys/quotad ]; then
		echo start; exit 0
	fi
	/sbin/pidof rpc.rquotad >/dev/null 2>&1
	if [ $? = 1 ]; then
		echo restart; exit 0
	fi
	;;
  *)
	msg_usage "$0 {start|stop|restart|force-reload|probe|status}"
	exit 3
esac

exit $RETVAL
